# Left: OS host(: on linux)  dir(3 parts)  git  PS
format = '$os$hostname${env_var.context_sep}${custom.dir_ell}${custom.dir_parent}${custom.dir_current}$character'
right_format = "$status$cmd_duration$jobs$time$git_branch$git_status"
add_newline = false

# --- Ellipsis: "…/" only when depth >= 3 (home-relative if inside ~) ---
[custom.dir_ell]
when = true
shell = ["zsh", "-f", "-c"]
use_stdin = false
command = '~/.config/starship/smart_path.zsh ell'
format = '[$output](fg:bright-black)'

# --- Parent: "~/"" at depth 1; "~/<parent>/" at depth 2; "parent/" deeper ---
[custom.dir_parent]
when = true
shell = ["zsh", "-f", "-c"]
use_stdin = false
command = '~/.config/starship/smart_path.zsh parent'
format = '[$output](italic fg:bright-black)'

# --- Current: "~" at home; otherwise just the basename (cwd) ---
[custom.dir_current]
when = true
shell = ["zsh", "-f", "-c"]
use_stdin = false
command = '~/.config/starship/smart_path.zsh current'
format = '[$output](italic fg:purple)'

[os]
disabled = false
format = "[$symbol]($style) "
style = "fg:#9e9e9e"
[os.symbols]
Macos = ""
Linux = ""
Windows = ""

[hostname]
ssh_only = false
format = "[$hostname]($style)"
style = "fg:blue"

[env_var.context_sep]
variable = "PROMPT_CONTEXT_SEP"
default = ":"
format = '[$env_value](fg:bright-black)'

[git_branch]
# leading space here ensures spacing only when in a repo
format = " [$symbol](fg:bright-black)[$branch]($style)"
symbol = "·"
style = "italic fg:cyan"

[git_status]
# Show one leading space and parentheses only when there’s anything to show.
format = """\
            ([·❪](fg:bright-black)\
            $staged\
            $modified\
            $renamed\
            $deleted\
            $conflicted\
            [$untracked](yellow)\
            $ahead_behind\
            $stashed\
            [❫](fg:bright-black))\
            """
style = "fg:bright-black"

# Per-status strings with counts
staged    = '+${count}'
modified  = '!${count}'
renamed   = '»${count}'
deleted   = '✘${count}'
conflicted= '~${count}'
untracked = '?${count}'
stashed   = '*${count}'

# Sync counts
ahead     = '⇡${count} '
behind    = '⇣${count} '
diverged  = '⇕⇡${ahead_count}⇣${behind_count} '

[character]
success_symbol = ' [%](bold fg:green)'
error_symbol = ' [%](bold fg:red)'

---
# 1) Base facts for this font
- name: Set per-font base facts
  set_fact:
    sf_tmp_dir: "{{ ansible_env.TMPDIR | default('/tmp') }}/apple_sf_fonts"
    sf_safe: "{{ font.name | regex_replace('[^A-Za-z0-9_.-]','_') }}"

# 2) Derived paths using the facts above
- name: Set per-font derived paths
  set_fact:
    sf_dmg: "{{ sf_tmp_dir }}/{{ sf_safe }}.dmg"
    sf_mount: "{{ sf_tmp_dir }}/mnt/{{ sf_safe }}"

# 3) HEAD check — Apple often requires login/license; this lets us skip gracefully
- name: Check URL accessibility (may require Apple login)
  uri:
    url: "{{ font.url }}"
    method: HEAD
    follow_redirects: all
    status_code: [200, 301, 302]
  register: sf_head
  failed_when: false
  changed_when: false

- name: Download DMG when accessible (or skip gracefully)
  get_url:
    url: "{{ font.url }}"
    dest: "{{ sf_dmg }}"
    mode: "0644"
    force: no
  when: sf_head.status is defined and sf_head.status in [200, 301, 302]
  failed_when: false

- name: Check if DMG exists
  stat:
    path: "{{ sf_dmg }}"
  register: sf_dmg_stat

- name: Warn if download blocked for {{ font.name }}
  debug:
    msg: >
      Could not download {{ font.name }} ({{ font.url }}).
      Sign in to Apple Developer and accept the license, then rerun.
  when: not sf_dmg_stat.stat.exists

# 4) Mount → install → unmount (only if DMG present)
- block:
    - name: Ensure mountpoint exists
      file:
        path: "{{ sf_mount }}"
        state: directory
        mode: "0755"

    - name: Attach DMG
      command: >
        hdiutil attach -nobrowse -readonly -noverify
        -mountpoint "{{ sf_mount }}" "{{ sf_dmg }}"
      register: attach_result
      changed_when: "'already mounted' not in (attach_result.stderr | default(''))"

    - name: Find .pkg inside mounted volume
      find:
        paths: "{{ sf_mount }}"
        patterns: "*.pkg"
        recurse: yes
      register: sf_pkg

    - name: Install via pkg (system-wide /Library/Fonts)
      become: yes
      command: /usr/sbin/installer -pkg "{{ sf_pkg.files[0].path }}" -target /
      when: sf_pkg.matched | int > 0

    - name: Find raw font files if no pkg (.otf/.ttf)
      find:
        paths: "{{ sf_mount }}"
        patterns:
          - "*.otf"
          - "*.ttf"
        recurse: yes
      register: sf_fonts
      when: sf_pkg.matched | int == 0

    - name: Copy raw font files to user Fonts
      copy:
        src: "{{ item.path }}"
        dest: "{{ lookup('env','HOME') }}/Library/Fonts/{{ item.path | basename }}"
        mode: "0644"
        remote_src: yes
      loop: "{{ sf_fonts.files | default([]) }}"
      when: sf_pkg.matched | int == 0

  rescue:
    - name: Log font install failure
      debug:
        msg: "Skipping {{ font.name }}: {{ ansible_failed_task.name }} failed — {{ ansible_failed_result.msg | default(ansible_failed_result.stderr, true) }}"

  always:
    - name: Detach DMG (best effort)
      command: hdiutil detach "{{ sf_mount }}"
      changed_when: false
      failed_when: false
  when: sf_dmg_stat.stat.exists

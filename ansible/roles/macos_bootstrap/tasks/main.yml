- name: Check for Xcode Command Line Tools
  command: xcode-select -p
  register: xcode_clt
  ignore_errors: yes

- name: Fail if Xcode Command Line Tools are missing
  fail:
    msg: "Xcode Command Line Tools missing. Run: xcode-select --install"
  when: xcode_clt.rc != 0

- name: Detect Homebrew (Apple Silicon path)
  stat:
    path: /opt/homebrew/bin/brew
  register: brew_path_opt

- name: Detect Homebrew (Intel mac path)
  stat:
    path: /usr/local/bin/brew
  register: brew_path_usr

- name: Install Homebrew (non-interactive) if missing
  shell: NONINTERACTIVE=1 /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"
  when: not brew_path_opt.stat.exists and not brew_path_usr.stat.exists

- name: Set brew_bin path fact
  set_fact:
    brew_bin: >-
      {{ '/opt/homebrew/bin/brew' if brew_path_opt.stat.exists
         else '/usr/local/bin/brew' }}

- name: Ensure brew shellenv is in .zprofile
  lineinfile:
    path: "{{ lookup('env','HOME') }}/.zprofile"
    create: yes
    line: "eval \"$( {{ brew_bin }} shellenv )\""
    state: present

- name: Tap Homebrew repos
  community.general.homebrew_tap:
    name: "{{ item }}"
    state: present
    path: "{{ brew_bin }}"
  loop: "{{ (brew_taps | default([])) + (brew_taps_extra | default([])) }}"

- name: Update Homebrew once (quiet)
  command: "{{ brew_bin }} update --quiet"
  changed_when: false

- name: Install Homebrew packages (idempotent)
  community.general.homebrew:
    name: "{{ (brew_packages | default([])) + (brew_packages_extra | default([])) }}"
    state: present
    path: "{{ brew_bin }}"
    update_homebrew: false
  tags: ['brew', 'brew_packages']

- name: Install Homebrew casks (idempotent)
  community.general.homebrew_cask:
    name: "{{ (brew_casks | default([])) + (brew_casks_extra | default([])) }}"
    state: present
    path: "{{ brew_bin }}"
    accept_external_apps: true
  tags: ['brew', 'brew_casks', 'casks']

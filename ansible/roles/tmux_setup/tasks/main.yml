---
# Linux packages (mac installs tmux via Homebrew elsewhere)
- name: Install tmux and clipboard helpers (Linux)
  become: yes
  apt:
    name:
      - tmux
      - wl-clipboard
      - xclip
    state: present
    update_cache: yes
  when: ansible_system != "Darwin"

# Make sure the XDG dir is present; we do NOT create the real file here
- name: Ensure ~/.config/tmux dir exists
  file:
    path: "{{ ansible_env.HOME }}/.config/tmux"
    state: directory
    mode: "0755"

# Optional: tell the user if the real file is missing (helps first-run)
- name: Check for ~/.config/tmux/.tmux.conf
  stat:
    path: "{{ ansible_env.HOME }}/.config/tmux/.tmux.conf"
  register: xdg_tmux

- name: Note about missing ~/.config/tmux/.tmux.conf
  debug:
    msg: "tmux: {{ ansible_env.HOME }}/.config/tmux/.tmux.conf not found yet (your helix config worktree should provide it)."
  when: not xdg_tmux.stat.exists

# Backup old ~/.tmux.conf if present
- name: Check for legacy ~/.tmux.conf
  stat:
    path: "{{ ansible_env.HOME }}/.tmux.conf"
  register: home_tmux

- name: Backup existing ~/.tmux.conf
  copy:
    src: "{{ ansible_env.HOME }}/.tmux.conf"
    dest: "{{ ansible_env.HOME }}/.tmux.conf.bak"
    remote_src: yes
    force: no
  when: home_tmux.stat.exists

# Install shim that sources the dot-named file in XDG directory
- name: Write shim ~/.tmux.conf that sources ~/.config/tmux/.tmux.conf
  copy:
    dest: "{{ ansible_env.HOME }}/.tmux.conf"
    mode: "0644"
    content: |
      # Generated by Ansible (helix/ansible/roles/tmux_setup)
      # Real config lives here:
      #   $HOME/.config/tmux/.tmux.conf
      if-shell 'test -f "$HOME/.config/tmux/.tmux.conf"' \
        'source-file "$HOME/.config/tmux/.tmux.conf"' \
        'display-message "tmux: $HOME/.config/tmux/.tmux.conf not found"'

# Reload if already inside tmux (best-effort)
- name: Reload tmux config if running inside tmux
  shell: tmux source-file ~/.tmux.conf
  args: { executable: /bin/bash }
  changed_when: false
  failed_when: false
  when: ansible_env.TMUX is defined and ansible_env.TMUX | length > 0

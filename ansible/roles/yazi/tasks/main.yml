---
# roles/yazi/tasks/main.yml

- set_fact:
    yazi_manage_prereqs: "{{ yazi_manage_prereqs | default(false) | bool }}"

# Try to find yazi first
- name: Check for yazi
  command: bash -lc 'command -v yazi'
  register: yazi_cmd
  changed_when: false
  failed_when: false

# macOS prerequisites (only if enabled)
- name: macOS | install Yazi prerequisites
  when: ansible_system == "Darwin" and yazi_manage_prereqs
  community.general.homebrew:
    name:
      - ffmpeg
      - jq
      - poppler
      - imagemagick
      - resvg
      - 7zip
      - fd
      - ripgrep
      - fzf
      - zoxide
      - bat
    state: present
    path: "{{ brew_bin | default('/opt/homebrew/bin/brew') }}"

# Debian/Ubuntu prerequisites (only if enabled)
- name: Debian/Ubuntu | install Yazi prerequisites
  when: ansible_facts.os_family == "Debian" and yazi_manage_prereqs
  become: yes
  apt:
    name:
      - file
      - fd-find
      - ripgrep
      - fzf
      - jq
      - ffmpeg
      - poppler-utils
      - p7zip-full
      - imagemagick
      - xclip
      - wl-clipboard
    state: present
    update_cache: yes

- name: Debian/Ubuntu | install resvg (best-effort)
  when: ansible_facts.os_family == "Debian" and yazi_manage_prereqs
  become: yes
  apt:
    name: resvg
    state: present
    update_cache: yes
  register: resvg_apt
  failed_when: false

# -----------------------
# macOS: Homebrew install
# -----------------------
- name: macOS | install yazi with brew
  when: ansible_system == "Darwin" and yazi_cmd.rc != 0
  community.general.homebrew:
    name: yazi
    state: present
    path: "{{ brew_bin | default('/opt/homebrew/bin/brew') }}"

# -----------------------
# Debian/Ubuntu: apt first
# -----------------------
- name: Debian/Ubuntu | try apt install
  when: ansible_facts.os_family == "Debian" and yazi_cmd.rc != 0
  become: yes
  apt:
    name: yazi
    state: present
    update_cache: yes
  register: yazi_apt
  failed_when: false

- name: Recheck yazi after apt
  command: bash -lc 'command -v yazi'
  register: yazi_cmd_after_apt
  changed_when: false
  failed_when: false
  when: ansible_facts.os_family == "Debian" and yazi_cmd.rc != 0

# -----------------------
# Fallback: official script (~/.local/bin/yazi)
# -----------------------
- name: Install yazi via official script (fallback)
  when: yazi_cmd.rc != 0
        and (yazi_cmd_after_apt is not defined or yazi_cmd_after_apt.rc != 0)
  shell: |
    set -e
    curl -fsSL https://yazi-rs.github.io/install.sh -o /tmp/yazi_install.sh
    sh /tmp/yazi_install.sh -y -b "{{ ansible_env.HOME }}/.local/bin"
  args: { executable: /bin/bash }
  changed_when: false

- name: Final check
  command: bash -lc 'command -v yazi'
  register: yazi_cmd_final
  changed_when: false
  failed_when: false

# -----------------------
# Nice-to-have symlinks for Ubuntu (fd & bat naming quirks)
# -----------------------

- name: Check if fdfind exists
  command: bash -lc 'command -v fdfind'
  register: fdfind_cmd
  changed_when: false
  failed_when: false

- name: Check if batcat exists
  command: bash -lc 'command -v batcat'
  register: batcat_cmd
  changed_when: false
  failed_when: false

- name: Provide 'fd' symlink to 'fdfind' (Ubuntu)
  become: yes
  file:
    src: /usr/bin/fdfind
    dest: /usr/local/bin/fd
    state: link
  when: ansible_facts.os_family == "Debian" and fdfind_cmd.rc == 0

- name: Provide 'bat' symlink to 'batcat' (Ubuntu)
  become: yes
  file:
    src: /usr/bin/batcat
    dest: /usr/local/bin/bat
    state: link
  when: ansible_facts.os_family == "Debian" and batcat_cmd.rc == 0

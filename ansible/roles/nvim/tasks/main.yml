---
- name: Ensure ~/.config exists (safety)
  file:
    path: "{{ ansible_env.HOME }}/.config"
    state: directory

# DO NOT remove/copy config anymore; ~/.config is a worktree managed by git.

- name: Check if nvim is available
  command: bash -lc 'command -v nvim >/dev/null && echo present || echo missing'
  register: nvim_check
  changed_when: false
  failed_when: false

- name: Ensure Vim undodir exists
  file:
    path: "{{ ansible_env.HOME }}/.vim/undodir"
    state: directory
    mode: "0755"

- name: Preinstall Neovim plugins via lazy.nvim (headless)
  when: nvim_check.stdout == 'present' and not ansible_check_mode
  shell: |
    nvim --headless "+Lazy! sync" "+qa"
  args: { executable: /bin/bash }
  environment:
    PATH: "{{ ansible_env.PATH }}:/opt/homebrew/bin:/usr/local/bin"
  changed_when: false

- name: Build LuaSnip jsregexp (if plugin is present)
  when: not ansible_check_mode
  shell: |
    [ -d "{{ ansible_env.HOME }}/.local/share/nvim/lazy/LuaSnip" ] && \
    make -C "{{ ansible_env.HOME }}/.local/share/nvim/lazy/LuaSnip" install_jsregexp || true
  args: { executable: /bin/bash }
  changed_when: false

# Build a final list we can pass to MasonInstall
- name: Build Mason package list (common + OS-specific + host overrides)
  set_fact:
    mason_packages_final: >-
      {{ (mason_packages_common | default([]))
         + ((mason_packages_macos | default([])) if ansible_system == 'Darwin'
            else (mason_packages_linux | default([])))
         + (mason_packages_extra | default([])) }}

# Make sure Mason registry is fresh (quiet, idempotent)
- name: MasonUpdate registry
  when: nvim_check.stdout == 'present' and not ansible_check_mode
  shell: |
    nvim --headless "+MasonUpdate" "+qa"
  args: { executable: /bin/bash }
  environment:
    PATH: "{{ ansible_env.PATH }}:/opt/homebrew/bin:/usr/local/bin"
  changed_when: false
  failed_when: false

# Install all requested tools (LSPs, DAPs, formatters) headlessly
- name: MasonInstall requested packages
  when: nvim_check.stdout == 'present' and (mason_packages_final | length) > 0 and not ansible_check_mode
  shell: |
    nvim --headless "+MasonInstall {{ mason_packages_final | join(' ') }}" "+qa" || true
  args: { executable: /bin/bash }
  environment:
    PATH: "{{ ansible_env.PATH }}:/opt/homebrew/bin:/usr/local/bin"
  changed_when: false

# Precompile treesitter parsers so first open is fast
- name: Treesitter update (sync) for common languages
  when: nvim_check.stdout == 'present' and (treesitter_parsers | default([]) | length) > 0 and not ansible_check_mode
  shell: |
    nvim --headless "+TSUpdateSync {{ treesitter_parsers | join(' ') }}" "+qa" || true
  args: { executable: /bin/bash }
  environment:
    PATH: "{{ ansible_env.PATH }}:/opt/homebrew/bin:/usr/local/bin"
  changed_when: false
  failed_when: false

brew_packages:
  - git
  - neovim
  - tmux
  - gh
  - bat
  - zoxide
  - ripgrep
  - fd
  - fzf
  - tree
  - jq
  - yq
  - wget
  - curl
  - python
  - pipx
  - stow
  - yazi
  - resvg
  - 1password-cli
  - node
  # pyevn removed python is now managed by uv
  # - pyenv
  - rust-analyzer
  - pngpaste
  - tree-sitter
  # Build tools you asked for
  - cmake
  - ninja
  - pkg-config
  - autoconf
  - automake
  - libtool
  - meson
  - rust
  - uv

  # --- GNU userland (for consistent flags & color across macOS) ---
  - coreutils    # installs gls/gdate/... (gnubin path available)
  - findutils    # gfind/gxargs
  - gnu-sed      # gsed
  - eza
  - gawk
  - grep         # ggrep (GNU), BSD /usr/bin/grep remains

# ---- Optional: build deps to Python builds smoother on macOS ----
#  - openssl@3
#  - readline
#  - xz
#  - bzip2
#  - sqlite
#  - libffi
#  - gdbm

# uv project list (macOS)
uv_projects_macos:
  - usdUtils
  - oauthManager
  - pythonKitchen
  - ocioTools
  - helperScripts
  - Incept
  - Lumiera
  - Ledu
  - hdrUtils

# Optional override for python if pyproject doesn't specify clearly:
houdini_python_patch: "3.11.7"

# Pixi defaults (can be left implicit)
# pixi_hosts_dir: "{{ ansible_env.HOME }}/.config/pixi/hosts"

# ---- Python toolchain knobs ----
pyenv_versions:
  - "3.11.7"     # matches Houdini’s current line, good to have locally
  - "3.12.4"     # whatever you want as your “latest” dev version
pyenv_global: "3.12.4"  # which one becomes `pyenv global`

pipx_packages:
  # poetry removed since now I am moving to uv
  # - poetry

brew_casks:
  - iterm2
  - 1password


# --------------------------------------------------
# Helix repo
# --------------------------------------------------
helix_cache_path: "{{ lookup('env','HOME') }}/.cache/helix_checkout"
helix_repo_url: "https://github.com/suhailphotos/helix.git"
helix_repo_branch: "main"
helix_remote: "https://github.com/suhailphotos/helix.git"
helix_main_branch: "main"
helix_config_branch: "config"


# Prefer dev repo under Dropbox if present; else fallback to runtime clone
helix_home: "{{ ansible_env.HOME }}/.helix"
helix_dev_home: "{{ matrix_root }}/helix"

# --------------------------------------------------
# Bindu
# --------------------------------------------------
bindu_raw_base: "https://raw.githubusercontent.com/suhailphotos/bindu/refs/heads/main"

# --------------------------------------------------
# iTerm assets
# --------------------------------------------------
iterm_download_dir: "{{ lookup('env','HOME') }}/Downloads"
iterm_profile_json_url: "{{ helix_dotfiles_raw_base }}/iterm/suhail-iterm-profile.json"
iterm_keymap_url: "{{ helix_dotfiles_raw_base }}/iterm/suhail-nvim-tmux.itermkeymap"
iterm_install_meslo: true
iterm_copy_assets_to_downloads: false
iterm_warn_missing_assets: true

# Two color presets (light + dark)
iterm_color_preset_urls:
  - "{{ helix_dotfiles_raw_base }}/iterm/catppuccin-latte-mocha.itermcolors"
  - "{{ helix_dotfiles_raw_base }}/iterm/catppuccin-mocha_dark.itermcolors"

# --- nvim config file location
nvim_src_rel: "config/.config/nvim"

# Apple SF fonts to fetch/install
apple_sf_fonts:
  - { name: "SF Pro",     url: "https://developer.apple.com/download/files/SF-Pro.dmg" }
  - { name: "SF Compact", url: "https://developer.apple.com/download/files/SF-Compact.dmg" }
  - { name: "SF Mono",    url: "https://devimages-cdn.apple.com/design/resources/download/SF-Mono.dmg" }
  - { name: "New York",   url: "https://devimages-cdn.apple.com/design/resources/download/NY.dmg" }


matrix_root: "{{ lookup('env','MATRIX') | default(ansible_env.HOME + '/Library/CloudStorage/Dropbox/matrix', true) }}"
matrix_packages_dir: "{{ matrix_root }}/packages"


# Only process what you list here (skip houdiniLab, etc.)
poetry_projects_macos:
  - hdrUtils
  - helperScripts
  - oauthManager
  - ocioTools
  - pythonKitchen
  - Incept
  - Ledu
  - Lumiera
  - notionManager
  - nukeUtils
  - pariVaha
  - usdUtils
  - webUtils

# Desktop apps you usually want on macOS (baseline; host can extend/trim)
desktop_casks:
  - inkscape
  - discord
  - jellyfin-media-player
  - obsidian
  - spotify
  - blender

# examples — all optional
eza_dir_foreground: Cyan
eza_build_underline: false
eza_readmemd_bold: true
eza_dot_italic_names:
  - ".backups"
  - ".git"
  - ".github"
  - ".config"
  - ".cache"
  - ".vscode"
  - ".idea"
  - ".venv"
  - ".mypy_cache"
  - ".pytest_cache"
  - "__pycache__"

# p10 url
p10k_raw_url: "{{ bindu_raw_base }}/p10k/.p10k.zsh"
